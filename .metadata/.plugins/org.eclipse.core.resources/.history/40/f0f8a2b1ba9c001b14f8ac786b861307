/**
******************************************************************************
@brief unit test for the office environment monitor project.
@details bla bla bla
@file unit_test.c
@author  Jonatan Lundqvist Silins, jonls@kth.se
@author  Sebastian Divander,       sdiv@kth.se
@date 29-03-2021
@version 1.0
******************************************************************************
*/

#include "unit_test.h"


static AT_RETURN_TYPE at_status = 	RETURN_AT_STATUS;
static AT_RETURN_TYPE cw_mode_status = 	RETURN_CW_MODE_STATUS;
static AT_RETURN_TYPE connection_status = RETURN_CONNECTION_STATUS;

void setUp(void){
}


void tearDown(void){

}

void test_ESP8266_AT(void){
	TEST_ASSERT_EQUAL_STRING("OK", uart_send(ESP8266_AT, at_status));
}

void test_ESP8266_AT_GMR(void){
	TEST_ASSERT_EQUAL_STRING("OK", uart_send(ESP8266_AT_GMR, at_status));
}

void test_ESP8266_AT_CWMODE_1(void){
	TEST_ASSERT_EQUAL_STRING("OK", uart_send(ESP8266_AT_CWMODE_STATION_MODE, at_status));
}

void test_ESP8266_AT_CWMODE_1_VERIFY(void){
	TEST_ASSERT_EQUAL_STRING("CWMODE:1", uart_send(ESP8266_AT_CWMODE_TEST, cw_mode_status));
}

void test_ESP8266_AT_CWJAP_SET(void){
	char buffer[256] = {0};
	ESP8266_get_cwjap_command(buffer);
	TEST_ASSERT_EQUAL_STRING("OK", uart_send(buffer, connection_status));
}

void test_ESP8266_AT_CWJAP_VERIFY(void){
	TEST_ASSERT_EQUAL_STRING("OK", uart_send(ESP8266_AT_CWJAP_TEST, connection_status));
}

void unit_test(void){
	init_uart_interrupt();

	UNITY_BEGIN();
	RUN_TEST(test_ESP8266_AT);
	RUN_TEST(test_ESP8266_AT_GMR);
	RUN_TEST(test_ESP8266_AT_CWMODE_1);
	RUN_TEST(test_ESP8266_AT_CWMODE_1_VERIFY);
	uart_send(ESP8266_AT_CWQAP, connection_status);
	RUN_TEST(test_ESP8266_AT_CWJAP_VERIFY);
		//RUN_TEST(test_ESP8266_AT_CWMODE_1_VERIFY);
		//RUN_TEST(test_ESP8266_AT_CWJAP_SET);

//	UNITY_END();



	//ESP8266_send_command(ESP8266_AT, full);
	//ESP8266_send_command(ESP8266_AT_GMR, full);
	//ESP8266_send_command(ESP8266_AT_CWMODE_TEST, full);
//	ESP8266_send_command(ESP8266_AT_CWMODE_STATION_MODE, full);
//	ESP8266_send_command("AT+CWDHCP_CUR?\r\n", full);
	//ESP8266_send_command("AT+CWLAP\r\n", full);
	//ESP8266_send_command(ESP8266_AT_CWJAP_TEST, full);
/*
	uart_send(ESP8266_AT_RST);
		uart_send(ESP8266_AT);
		uart_send(ESP8266_AT_CWMODE_TEST);
		uart_send("AT+CWLAP\r\n");
		uart_send(ESP8266_AT_CWQAP);
		uart_send(ESP8266_AT_CWJAP_TEST);
	*/
}


